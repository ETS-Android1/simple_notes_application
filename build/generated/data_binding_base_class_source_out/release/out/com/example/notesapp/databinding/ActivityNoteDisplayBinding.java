// Generated by view binder compiler. Do not edit!
package com.example.notesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.notesapp.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNoteDisplayBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView displayGreenPriority;

  @NonNull
  public final TextView displayNotes;

  @NonNull
  public final ImageView displayRedPriority;

  @NonNull
  public final TextView displaySubtitle;

  @NonNull
  public final TextView displayTitle;

  @NonNull
  public final ImageView displayYellowPriority;

  @NonNull
  public final FloatingActionButton editNotesButton;

  private ActivityNoteDisplayBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView displayGreenPriority, @NonNull TextView displayNotes,
      @NonNull ImageView displayRedPriority, @NonNull TextView displaySubtitle,
      @NonNull TextView displayTitle, @NonNull ImageView displayYellowPriority,
      @NonNull FloatingActionButton editNotesButton) {
    this.rootView = rootView;
    this.displayGreenPriority = displayGreenPriority;
    this.displayNotes = displayNotes;
    this.displayRedPriority = displayRedPriority;
    this.displaySubtitle = displaySubtitle;
    this.displayTitle = displayTitle;
    this.displayYellowPriority = displayYellowPriority;
    this.editNotesButton = editNotesButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNoteDisplayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNoteDisplayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_note_display, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNoteDisplayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.display_green_priority;
      ImageView displayGreenPriority = rootView.findViewById(id);
      if (displayGreenPriority == null) {
        break missingId;
      }

      id = R.id.displayNotes;
      TextView displayNotes = rootView.findViewById(id);
      if (displayNotes == null) {
        break missingId;
      }

      id = R.id.display_red_priority;
      ImageView displayRedPriority = rootView.findViewById(id);
      if (displayRedPriority == null) {
        break missingId;
      }

      id = R.id.displaySubtitle;
      TextView displaySubtitle = rootView.findViewById(id);
      if (displaySubtitle == null) {
        break missingId;
      }

      id = R.id.displayTitle;
      TextView displayTitle = rootView.findViewById(id);
      if (displayTitle == null) {
        break missingId;
      }

      id = R.id.display_yellow_priority;
      ImageView displayYellowPriority = rootView.findViewById(id);
      if (displayYellowPriority == null) {
        break missingId;
      }

      id = R.id.editNotesButton;
      FloatingActionButton editNotesButton = rootView.findViewById(id);
      if (editNotesButton == null) {
        break missingId;
      }

      return new ActivityNoteDisplayBinding((RelativeLayout) rootView, displayGreenPriority,
          displayNotes, displayRedPriority, displaySubtitle, displayTitle, displayYellowPriority,
          editNotesButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
