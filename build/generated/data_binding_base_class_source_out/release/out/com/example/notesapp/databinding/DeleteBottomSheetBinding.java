// Generated by view binder compiler. Do not edit!
package com.example.notesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.notesapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeleteBottomSheetBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout bottomSheet;

  @NonNull
  public final TextView deleteNo;

  @NonNull
  public final TextView deleteYes;

  private DeleteBottomSheetBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout bottomSheet, @NonNull TextView deleteNo, @NonNull TextView deleteYes) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.deleteNo = deleteNo;
    this.deleteYes = deleteYes;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DeleteBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeleteBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.delete_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeleteBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout bottomSheet = (LinearLayout) rootView;

      id = R.id.delete_no;
      TextView deleteNo = rootView.findViewById(id);
      if (deleteNo == null) {
        break missingId;
      }

      id = R.id.delete_yes;
      TextView deleteYes = rootView.findViewById(id);
      if (deleteYes == null) {
        break missingId;
      }

      return new DeleteBottomSheetBinding((LinearLayout) rootView, bottomSheet, deleteNo,
          deleteYes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
