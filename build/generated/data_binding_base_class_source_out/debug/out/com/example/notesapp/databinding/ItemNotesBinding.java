// Generated by view binder compiler. Do not edit!
package com.example.notesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.notesapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemNotesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView notesDate;

  @NonNull
  public final View notesPriority;

  @NonNull
  public final TextView notesSubtitle;

  @NonNull
  public final TextView notesTitle;

  private ItemNotesBinding(@NonNull LinearLayout rootView, @NonNull TextView notesDate,
      @NonNull View notesPriority, @NonNull TextView notesSubtitle, @NonNull TextView notesTitle) {
    this.rootView = rootView;
    this.notesDate = notesDate;
    this.notesPriority = notesPriority;
    this.notesSubtitle = notesSubtitle;
    this.notesTitle = notesTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemNotesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemNotesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_notes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemNotesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.notesDate;
      TextView notesDate = rootView.findViewById(id);
      if (notesDate == null) {
        break missingId;
      }

      id = R.id.notesPriority;
      View notesPriority = rootView.findViewById(id);
      if (notesPriority == null) {
        break missingId;
      }

      id = R.id.notesSubtitle;
      TextView notesSubtitle = rootView.findViewById(id);
      if (notesSubtitle == null) {
        break missingId;
      }

      id = R.id.notesTitle;
      TextView notesTitle = rootView.findViewById(id);
      if (notesTitle == null) {
        break missingId;
      }

      return new ItemNotesBinding((LinearLayout) rootView, notesDate, notesPriority, notesSubtitle,
          notesTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
